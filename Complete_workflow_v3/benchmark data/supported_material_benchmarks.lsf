function querybenchmarksources(material){
    supported_materials_and_models_list;
    if(material == supported_materials{13}){
        return {benchmark_sources{1}};
    } else if(material == supported_materials{11}){
        return {benchmark_sources{2}};
    } else if(material == supported_materials{1}){
        return {benchmark_sources{3}};
    } else if(material == supported_materials{2}){
        return {benchmark_sources{4}};
    } else if(material == supported_materials{12}){
        return {benchmark_sources{5},benchmark_sources{6}};
    } else if(material == supported_materials{9}){
        return {benchmark_sources{7}};
    }
    return {""};
}

function getbenchmarksourcelongname(shortname){
    supported_materials_and_models_list;
    return benchmark_sources_long{find(benchmark_sources == shortname)};
}

function getbenchmarkdata(source, material){
    supported_materials_and_models_list;
    filename_comp = source + "_benchmark_composition.txt";
    filename_index_vs_freq = source + "_benchmark_index_vs_frequency.txt";
    if(find(benchmark_sources == source) > 0){
        composition = readdata(filename_comp);
        x = composition(:,1);
        index_vs_freq = readdata(filename_index_vs_freq);
        freq = c/index_vs_freq(:,1)/1e-9;
        index = transpose(index_vs_freq(:,2:end));
        dataSet = matrixdataset(source);
        if(size(composition,2) > 1){
            y = composition(:,2);
            dataSet.addparameter("x",x,"y",y);
        }else{
            dataSet.addparameter("x",x);
        }
        dataSet.addparameter("frequency",freq,"wavelength",c/freq);
        dataSet.addattribute("index",index);
        return dataSet;
    }
}